{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","App.jsx","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","s","map","id","name","number","item","tel","btnDel","onClick","Filter","value","onChange","filter","label","text","type","pattern","title","required","input","ContactForm","state","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","resetInput","this","form","btnAdd","Component","App","forSubmitHandler","contactsNew","shortid","generate","some","contact","toLowerCase","alert","deleteContacts","contactsId","prevState","changeFilter","getVisibleContacts","normalizeFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","console","log","app","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b1e2bca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"title\":\"App_title__-GfWs\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"item\":\"ContactList_item__3YsZK\",\"name\":\"ContactList_name__2WLgA\",\"tel\":\"ContactList_tel__Ba6p5\",\"btnDel\":\"ContactList_btnDel__W2VVH\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.item} key={id}>\n        <p className={s.name}>{name}</p>\n        <p className={s.tel}>{number}</p>\n        <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label className={s.label}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import React, { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    text: \"\",\n  };\n\n  // input  to \"input\"\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // add contact via button\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetInput();\n  };\n\n  // clear input fields\n\n  resetInput = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The phone number must be digits and may contain spaces, dashes, parentheses and may start with +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.btnAdd}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport { ContactForm };\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\n// Import components\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\n\n// Import pnotify\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/confirm/dist/PNotifyConfirm.css\";\n\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: \"\",\n  };\n\n  // Requests to remote resources\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  // Record into localStorage\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // Add contact\n\n  forSubmitHandler = (text) => {\n    const { contacts } = this.state;\n\n    // \"id\" generation\n    const contactsNew = {\n      id: shortid.generate(),\n      ...text,\n    };\n\n    const someContact = contacts.some(\n      (contact) => contact.name.toLowerCase() === text.name.toLowerCase()\n    );\n\n    if (someContact) {\n      alert(`${text.name} is already in contacts`);\n      return;\n    }\n\n    // Add the new contact\n\n    this.setState(({ contacts }) => ({\n      contacts: [contactsNew, ...contacts],\n    }));\n  };\n\n  // Delete the contact\n\n  deleteContacts = (contactsId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactsId\n      ),\n    }));\n  };\n\n  // Filter\n\n  changeFilter = (event) => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  // Searching by filter\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n    console.log(visibleContacts);\n\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.forSubmitHandler} />\n        <h2 className={s.titleContacts}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"text\":\"Filter_text__20oAI\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}